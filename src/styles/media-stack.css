/**
 * Media Stack component styles
 * Enhanced for Tailwind CSS v4.1 with modern CSS features
 * Uses Tailwind utilities wherever possible
 */

/* Import modular media component styles */
@import './media-images.css';
@import './media-markers.css';
@import './media-stats.css';

/* Base media stack container - using @apply for Tailwind utilities */
.media-stack {
  @apply flex w-full h-full items-center justify-center relative overflow-visible opacity-0 invisible bg-transparent aspect-[711/400] will-change-[transform,filter];

  /* Custom properties for container queries - no Tailwind equivalent */
  container-type: size;

  /* Performance optimizations - no Tailwind equivalent */
  transform: var(--gpu-acceleration, translateZ(0));
  backface-visibility: hidden;
}

/* Media stack state classes */
.media-stack.initialized {
  @apply transition-all duration-300 ease-linear;
}

/* Dynamically created media items - using @apply for Tailwind utilities */
.media-item {
  @apply absolute inset-0 opacity-0 w-full h-auto flex items-center justify-center transition-opacity duration-300 aspect-[711/400] will-change-[transform,opacity];

  /* Let GSAP handle all transforms including scale - don't set static transform */
  backface-visibility: hidden;
}

.media-item.active {
  @apply opacity-100;
}

.media-item img {
  @apply w-full h-full object-contain;

  /* Performance optimizations - no Tailwind equivalent */
  will-change: transform, filter;
  transform: var(--gpu-acceleration, translateZ(0));
  backface-visibility: hidden;
}

/* Legacy media content support - using @apply for Tailwind utilities */
.media-stack img {
  @apply max-w-full max-h-full w-auto h-auto object-contain;

  /* Performance optimizations for images - no Tailwind equivalent */
  will-change: transform, filter;
  transform: var(--gpu-acceleration, translateZ(0));
  backface-visibility: hidden;
}

/* Interactive media stack states */
.media-stack.interactive {
  @apply cursor-pointer transition-all duration-300;

  /* Custom timing function - no Tailwind equivalent */
  transition-timing-function: var(
    --ease-gsap,
    cubic-bezier(0.25, 0.1, 0.25, 1)
  );
}

/* Loading state for media stack */
.media-stack.loading {
  &::before {
    @apply absolute inset-0;

    /* Custom gradient - no Tailwind equivalent */
    content: '';
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.4),
      transparent
    );
  }
}

/* GIF and animated content - using @apply for Tailwind utilities */
.media-stack .animated-content {
  @apply max-w-full max-h-full w-auto h-auto object-contain rounded-md;

  /* Optimize animated content - no Tailwind equivalent */
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
}

/* Performance optimizations for reduced motion */
@media (prefers-reduced-motion: reduce) {
  .media-stack,
  .media-stack.interactive {
    will-change: auto;
    transform: none !important;
    transition-duration: 0.01ms !important;
  }

  .media-stack.loading::before {
    animation: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .media-stack .overlay-content {
    @apply bg-black/90;
  }
}
